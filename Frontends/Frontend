<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Tic Tac Toe</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      text-align: center;
      margin-top: 40px;
    }
    #board {
      display: grid;
      grid-template-columns: repeat(3, 100px);
      grid-template-rows: repeat(3, 100px);
      gap: 5px;
      width: max-content;
      margin: 20px auto;
    }
    .cell {
      background-color: #f0f0f0;
      border: 1px solid #ccc;
      font-size: 2em;
      display: flex;
      justify-content: center;
      align-items: center;
      cursor: pointer;
      user-select: none;
    }
    .cell:hover {
      background-color: #e0e0e0;
    }
    #message {
      font-size: 1.2em;
      margin-top: 20px;
    }
    #restart {
      margin-top: 20px;
      padding: 8px 16px;
      font-size: 1em;
      display: none;
    }
  </style>
</head>
<body>

<h1>Tic Tac Toe</h1>
<div id="board"></div>
<div id="message">Player X's turn</div>
<button id="restart">Play Again</button>

<script>
  const boardElement = document.getElementById("board");
  const messageElement = document.getElementById("message");
  const restartButton = document.getElementById("restart");

  let board = [
    ["", "", ""],
    ["", "", ""],
    ["", "", ""]
  ];
  let currentPlayer = "X";
  let gameOver = false;

  function createBoard() {
    boardElement.innerHTML = "";
    for (let row = 0; row < 3; row++) {
      for (let col = 0; col < 3; col++) {
        const cell = document.createElement("div");
        cell.className = "cell";
        cell.dataset.row = row;
        cell.dataset.col = col;
        cell.textContent = board[row][col];
        cell.addEventListener("click", handleClick);
        boardElement.appendChild(cell);
      }
    }
  }

  function handleClick(e) {
    if (gameOver) return;

    const row = e.target.dataset.row;
    const col = e.target.dataset.col;

    if (board[row][col] !== "") return;

    board[row][col] = currentPlayer;
    e.target.textContent = currentPlayer;

    if (checkWin()) {
      messageElement.textContent = `Player ${currentPlayer} wins!`;
      gameOver = true;
      restartButton.style.display = "inline-block";
    } else if (isTie()) {
      messageElement.textContent = "It's a tie!";
      gameOver = true;
      restartButton.style.display = "inline-block";
    } else {
      currentPlayer = currentPlayer === "X" ? "O" : "X";
      messageElement.textContent = `Player ${currentPlayer}'s turn`;
    }
  }

  function checkWin() {
    // Rows, Columns, Diagonals
    for (let i = 0; i < 3; i++) {
      if (board[i][0] === currentPlayer &&
          board[i][1] === currentPlayer &&
          board[i][2] === currentPlayer) return true;

      if (board[0][i] === currentPlayer &&
          board[1][i] === currentPlayer &&
          board[2][i] === currentPlayer) return true;
    }

    if (board[0][0] === currentPlayer &&
        board[1][1] === currentPlayer &&
        board[2][2] === currentPlayer) return true;

    if (board[0][2] === currentPlayer &&
        board[1][1] === currentPlayer &&
        board[2][0] === currentPlayer) return true;

    return false;
  }

  function isTie() {
    return board.flat().every(cell => cell !== "");
  }

  restartButton.addEventListener("click", () => {
    board = [
      ["", "", ""],
      ["", "", ""],
      ["", "", ""]
    ];
    currentPlayer = "X";
    gameOver = false;
    messageElement.textContent = `Player ${currentPlayer}'s turn`;
    restartButton.style.display = "none";
    createBoard();
  });

  createBoard();
</script>

</body>
</html>
