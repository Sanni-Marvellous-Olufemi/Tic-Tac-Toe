<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Tic Tac Toe</title>
  <style>
    body { font-family: sans-serif; text-align: center; margin-top: 40px; }
    #board { display: grid; grid-template-columns: repeat(3, 100px); gap: 5px; margin: 20px auto; }
    .cell {
      width: 100px; height: 100px; background: #eee;
      display: flex; justify-content: center; align-items: center;
      font-size: 2em; cursor: pointer;
    }
    .cell:hover { background-color: #ddd; }
    #message { margin-top: 20px; font-size: 1.2em; }
    #restart { margin-top: 20px; padding: 10px 20px; font-size: 1em; display: none; }
  </style>
</head>
<body>

<h1>Tic Tac Toe</h1>
<div id="board"></div>
<div id="message">Loading...</div>
<button id="restart">Play Again</button>

<script>
  const boardElement = document.getElementById("board");
  const messageElement = document.getElementById("message");
  const restartButton = document.getElementById("restart");

  function renderBoard(board) {
    boardElement.innerHTML = "";
    board.forEach((row, r) => {
      row.forEach((cell, c) => {
        const div = document.createElement("div");
        div.className = "cell";
        div.textContent = cell;
        div.addEventListener("click", () => makeMove(r, c));
        boardElement.appendChild(div);
      });
    });
  }

  function makeMove(row, col) {
    fetch("/move", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ row, col })
    })
    .then(res => res.json())
    .then(data => {
      renderBoard(data.board);
      messageElement.textContent = data.message;
      if (data.game_over) {
        restartButton.style.display = "inline-block";
      }
    });
  }

  restartButton.addEventListener("click", () => {
    fetch("/reset", { method: "POST" })
    .then(res => res.json())
    .then(data => {
      renderBoard(data.board);
      messageElement.textContent = data.message;
      restartButton.style.display = "none";
    });
  });

  // Load initial state
  fetch("/")
    .then(() => {
      fetch("/reset", { method: "POST" })  // Reset on load
      .then(res => res.json())
      .then(data => {
        renderBoard(data.board);
        messageElement.textContent = "Player X's turn";
      });
    });
</script>

</body>
</html>